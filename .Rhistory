my_sqrt
my_div <- z/my_sqrt
my_div
C(1, 2, 3, 4) c(0, 10)
c(1, 2, 3, 4)
c)1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z*2 + 1000
my_div
swirl()
library swirl()
library (swirl)
install_course(data analysis)
install_course(data_analysis)
install_course(Data Analysis)
install_course(Data_Analysis)
library(swirl)
install_course_zip("This Pc/Local_Disk(c:)/Program Files/R/swirl_courses-master.zip", multi=TRUE, which_course="Data_Analysis")
install_course_zip("/R/swirl_courses-master.zip", multi=TRUE, which_course="Data_Analysis")
library(swirl)
install_course("Data_Analysis")
swirl()
getwd()
ls()
x <- 9
ls()
list.files()
?list.files
args(list.files())
args(list.files)
old.dir <- dir()
old.dir <- getwd()
dir.create(testdir)
testdir <- dir.create()
dir.create()
?dir.create
dir.create(path=testdir)
dir.create()testdir
info()\
info()
dir.create() dir.testdir
dir.create(testdir)
dir.create( testdir )
dir.creat("testdir")
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls
list.files()
list.files("testdir")
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.r", "mytest3.R")
file.copy("mytest2.R", "mytest3.R")
file.path()
file.path("mytest3.R")
file.path('folder1', 'folder2')
?dir.create
dir.create("testdir2", filepath("testdir3"))
dir.create("testdir2"),
filepath("testdir3")
dir.create("testdir2")
dir.create(filepath('testdir2', 'testdir3'), recursive = TRUE)
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
setwd(old.dir)
1:20
pi:10
15:1
`:`
?`:`
seq(1,20)
seq(0, 10, by=0.5)
seq(5, 10, length=30)
my_seq <- seq(5, 10, length=30).
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
num_vect(0.5, 55, -10, 6)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
numvect >= 6
num_vect >= 6
my_char <- "my" "name" "is" "Maya"
my_char <- c("my", "name", "is", "Maya")
my_char <- c("my", "name", "is)
my_char <- c("my", "name", "is)
my_char <- c("my", "name", "is)
q
q
=
my_char <- c("my", "name", "is)
my_char <- c("my", "name", "is)
my_char <- c("my", "name", "is)
my_char <- C("my", "name", "is)
my_char <- C("my", "name", "is")
my_char <- c("my", "name", "is")
my_char <- c("My", "name", "is")
my_char
past(my_char, collapse = " ")
paste(my_char, collapse = " ")
my_name <- c(my_char, "Maya")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world", sep = " ")
paste("Hello", "world!", sep = " ")
paste(c(1:3), c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
swirl
swirl()
info()
main()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
x <- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(Na, 1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
is.na(my_data)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
swirl()
library(swirl)
rm(list=ls())
swirl()
x
x[1:10]
x[is.na(x)]
x[!is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3rd, 5th, 7th)]
x[c(1:3:7)]
x[c(1, 3, 7)]
c(3, 5, 7)
x[c[3, 5, 7]]
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
library(swirl)
rm(list=ls())
swirl()
myvector <- c(1:20)
myvector <- 1:20
my_vector <- c(1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix()
?matrix
?matrix
matrix(date = 1:20, nrow = 4, ncol = 5)
matrix(data = 1:20, nrow = 4, ncol = 5)
my_matrix2 <- matrix(data = 1:20, nrow = 4, ncol = 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data, cnames)
my_data <- colnames(cnames)
colnames(my_data) <- cnames
my_data
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7 == TRUE
6 < 7
10 <= 10
5 != 7
(5 == 7) == !TRUE
5 != 7
!TRUE == (5 == 7)
!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE).
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(int)
which(ints)
which(ints, >7)
which(ints, > 7)
?which
which(ints, 7)
which(TRUE >=7(ints))
which(>7(ints))
which(ints > 7
which(ints > 7)
any(ints < 0)
all(ints > 0)
sys.date()
sys.Date()
Sys.Date()
mean(c(2, 4, 5))
sumbit()
submit()
boring_function('My first function')
boring_function('My first function')
boring_function('My first function!')
boring_function
library(swirl)
rm(list=ls())
swirl()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
next
help
info()
skip()
my_mean(c(4, 5, 10))
submit()
submit()
skip()
remainder(5)
remainder(11, 5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
skip()
skip()
evaluate(function(x){x+1}, 6)
evaluate(function(x), c(8, 4, 0))
evaluate(function(x){x}, c(8, 4, 0))
skip()
evaluate(function(x){x[3]}, c(8, 4, 0))
skip()
?paste
paste("Programming", "is", "fun!")
submit()
submit()
skip()
telegram(fuck)
telegram(remainder(5))
skip()
mad_libs("Denmark", "Sad", "House" )
skip()
skip()
library(swirl)
rm(list=ls())
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
sapply(flags, class)
cls_vect <- sapply(flags, class)
cls_vect
class(cls_vect)
sum(flags$orange)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
sapply(flag_shapes, rang())
sapply(flag_shapes, range())
skip()
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique vals, length)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
install.packages(dplyr)
install.packages(ggplot2)
install.packages("ggplot2")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
library(ggplot2)
head(flag_colors)
(update.packages(ask = FALSE, checkBuilt = TRUE)
tinytex:::is_tinytex()
tinytex::install_tinytex()
install.packages('tinytex')
tinytex::install_tinytex()
install.packages('tinytex')
tinytex::install_tinytex()
install.packages('tinytex')
install.packages("tinytex")
tinytex::install_tinytex()
tinytex:::is_tinytex(TRUE)
tinytex:::is_tinytex()
setwd(C:\Users\max\Documents\R\ass_1)
setwd(C:/Users/max/Documents/R/ass_1)
setwd(c:/users/max/Documents/R/ass_1)
setwd(c:\users\max\Documents\R\ass_1)
setwd(c:\users\max\documents\r\ass_1)
setwd(\users\max\documents\r\ass_1)
setwd(users\max\documents\r\ass_1)
getwd()
setwd(\R\ass_1)
getwd()
setwd("C:/Users/max/Documents/R/ass_1")
data <- read.csv("boston.csv")
data <- read.csv("boston.csv")
head(data)
summary(data)
summary(data[white])
summary(data["white"])
library(dplyr)
install.packages(dplyr)
install.packages("dplyr")
library(dplyr)
summarize(data, "income", "white")
summary(data)
b_data <- read.csv("boston.csv")
head(b_data)
summary(b_data)
income.control.tab <- table(income = b_data$income, control = b_data$treatment)
print(income.control.tab)
mean(income.control.tab)
addmargins(income.control.tab)
mean(b_data$income[b_data$treatment == 0])
mean(b_data$income[b_data$treatment == 1])
median(b_data$income[b_data$treatment == 0])
median(b_data$income[b_data$treatment == 1])
males.control. <- table(treatment = b_data$treatment, males = b_data$male)
males.control
males.control <- table(treatment = b_data$treatment, males = b_data$male)
males.control
table(treatment = b_data$treatment, males = b_data$male)
print(males.control if "males" == 1)
print(males.control, "males" == 1)
males.control[, 2]
males.control[1:2, 2]
males.control[2, 2]
males.control[, 2]
males.control[2,]
males.control[,2]
table(treatment = b_data$treatment, males = b_data$male[1])
men_only <- males.control[, 2]
men_only
males.control[1,2]/sum(males.control[,1])
males.control[2,2]/sum(males.control[,2])
mean(b_data$numberim.pre[b_data$treatment == 1])
mean(b_data$numberim.pre[b_data$treatment == 0])
head(b_data$numberim.pre)
mean(b_data$numberim.pre[b_data$treatment])
mean(b_data$numberim.pre[b_data$treatment] == 1)
mean(b_data$numberim.pre[b_data$treatment] == 0)
mean(b_data$numberim.pre)
mean(b_data$numberim.pre, na.rm = T)
mean(b_data$numberim.pre[b_data$treatment == 1], na.rm = T)
mean(b_data$numberim.pre[b_data$treatment == 0], na.rm = T)
mean(b_data$numberim.post[b_data$treatment == 1], na.rm = T)
mean(b_data$numberim.pre[b_data$treatment == 0], na.rm = T)
mean(b_data$numberim.post[b_data$treatment == 0], na.rm = T)
control_dif_means <- (mean(b_data$numberim.pre[b_data$treatment == 0], na.rm = T) - mean(b_data$numberim.post[b_data$treatment == 0], na.rm = T))
control_dif_means
treatment_dif_means <- (mean(b_data$numberim.pre[b_data$treatment == 1], na.rm = T) - mean(b_data$numberim.post[b_data$treatment == 1], na.rm = T))
print(
par()
control_dif_means,
treatment_dif_means
)
print(control_dif_means)
print(treatment_dif_means)
mean(b_data$numberim.pre[b_data$treatment == 1], na.rm = T)
mean(b_data$numberim.post[b_data$treatment == 1], na.rm = T)
control_dif_means <- (mean(b_data$numberim.post[b_data$treatment == 0], na.rm = T) - mean(b_data$numberim.pre[b_data$treatment == 0], na.rm = T))
print(control_dif_means)
treatment_dif_means <- (mean(b_data$numberim.post[b_data$treatment == 1], na.rm = T) - mean(b_data$numberim.pre[b_data$treatment == 1], na.rm = T))
print(treatment_dif_means)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "C:/Users/max/Documents/R/ass_1")
males.both <- table(treatment = b_data$treatment, males = b_data$male)
## control group proportion of men ##
males.control[1,2]/sum(males.both[,1])
## treatment group proportion of men ##
males.control[2,2]/sum(males.both[,2])
males.both <- table(treatment = b_data$treatment, males = b_data$male)
## control group proportion of men ##
males.both[1,2]/sum(males.both[,1])
## treatment group proportion of men ##
males.both[2,2]/sum(males.both[,2])
(mean(b_data$numberim.post[b_data$treatment == 0], na.rm = T)
-
mean(b_data$numberim.pre[b_data$treatment == 0], na.rm = T)
(mean(b_data$numberim.post[b_data$treatment == 1], na.rm = T)
-
mean(b_data$numberim.pre[b_data$treatment == 1], na.rm = T)
mean(b_data$numberim.post[b_data$treatment == 0], na.rm = T
-
mean(b_data$numberim.pre[b_data$treatment == 0], na.rm = T)
mean(b_data$numberim.post[b_data$treatment == 1], na.rm = T)
mean(b_data$numberim.post[b_data$treatment == 0], na.rm = T)
mean(b_data$numberim.post[b_data$treatment == 1], na.rm = T)
mean(b_data$numberim.post[b_data$treatment == 0], na.rm = T)
mean(b_data$numberim.pre[b_data$treatment == 0], na.rm = T)
mean(b_data$numberim.post[b_data$treatment == 1], na.rm = T)
mean(b_data$numberim.pre[b_data$treatment == 1], na.rm = T)
control_dif_means <- (mean(b_data$numberim.post[b_data$treatment == 0], na.rm = T)
-
mean(b_data$numberim.pre[b_data$treatment == 0], na.rm = T))
print(control_dif_means)
treatment_dif_means <- (mean(b_data$numberim.post[b_data$treatment == 1], na.rm = T)
-
mean(b_data$numberim.pre[b_data$treatment == 1], na.rm = T))
print(treatment_dif_means)
b_data$type <- NA
b_data$type[b_data$college == 1 & b_data$treatment == 0] <- EducatedControl
b_data$type[b_data$college == 0 & b_data$treatment == 0] <- UneducatedControl
b_data$type[b_data$college == 1 & b_data$treatment == 1] <- EducatedTreatment
b_data$type[b_data$college == 0 & b_data$treatment == 1] <- UneducatedTreatment
b_data$type <- NA
b_data$type[b_data$college == 1 & b_data$treatment == 0] <- "EducatedControl"
b_data$type[b_data$college == 0 & b_data$treatment == 0] <- "UneducatedControl"
b_data$type[b_data$college == 1 & b_data$treatment == 1] <- "EducatedTreatment"
b_data$type[b_data$college == 0 & b_data$treatment == 1] <- "UneducatedTreatment"
b_data$type <- as.factor(b_data$type)
levels(b_data$type)
tapply(b_data$numberim.pre, b_data$type, mean)
tapply(b_data$numberim.pre, b_data$type, mean, na.rm = T)
tapply(b_data$numberim.post, b_data$type, mean, na.rm = T)
```{r}
b_data$type <- NA
b_data$type[b_data$college == 1 & b_data$treatment == 0] <- "EduControl"
b_data$type[b_data$college == 0 & b_data$treatment == 0] <- "UneduControl"
b_data$type[b_data$college == 1 & b_data$treatment == 1] <- "EduTreatment"
b_data$type[b_data$college == 0 & b_data$treatment == 1] <- "UneduTreatment"
b_data$type <- as.factor(b_data$type)
tapply(b_data$numberim.pre, b_data$type, mean, na.rm = T)
tapply(b_data$numberim.post, b_data$type, mean, na.rm = T)
b_data$type <- NA
b_data$type[b_data$college == 1 & b_data$treatment == 0] <- "EduControl"
b_data$type[b_data$college == 0 & b_data$treatment == 0] <- "UneduControl"
b_data$type[b_data$college == 1 & b_data$treatment == 1] <- "EduTreatment"
b_data$type[b_data$college == 0 & b_data$treatment == 1] <- "UneduTreatment"
b_data$type <- as.factor(b_data$type)
tapply(b_data$numberim.pre, b_data$type, mean, na.rm = T)
tapply(b_data$numberim.post, b_data$type, mean, na.rm = T)
## control group proportion of men ##
males.both[2,1]/sum(males.both[,1])
## treatment group proportion of men ##
males.both[2,2]/sum(males.both[,2])
